{"ast":null,"code":"var _jsxFileName = \"/home/daniella/\\xC1rea de Trabalho/Trybe_Exercicios/bloco15-dia4-actions-assincronas/exercise-game-of-thrones-characters/src/components/CharacterInfo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, \"Teste\"); // const { name, gender, aliases, books, loading, error } = this.props;\n    // if (!loading) {\n    //   return (\n    //     <ul>\n    //       <li>Name: {name}</li>\n    //       <li>Gender: {gender}</li>\n    //       <li>Aliases: {aliases.map((alias, index) => <p key={`${alias}-${index}`}>{alias}</p>)}</li>\n    //       <li>Books: {books.map((book, index) => <p key={`${book}-${index}`}>{book}</p>)}</li>\n    //     </ul>\n    //   )\n    // }\n    // if (error) { return <div>{error}</div>; }\n    // if (loading) { return <div>Loading...</div>; }\n    // return <div>Type a character name and click to search!</div>;\n  }\n\n}\n\n; //mapeie o estado global para a propriedade da sua aplicação\n\nconst mapStateToProps = state => ({\n  name: state.reducerFetch.name,\n  gender: state.reducerFetch.gender,\n  aliases: state.reducerFetch.aliases,\n  books: state.reducerFetch.books,\n  loading: state.reducerFetch.loading,\n  error: state.reducerFetch.error\n}); // conecte este componente ao redux aqui\n\n\nexport default connect(mapStateToProps)(CharacterInfo); //faça as propTypes\n\nCharacterInfo.propTypes = {\n  loading: propTypes.bool.isRequired,\n  character: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string\n};","map":{"version":3,"sources":["/home/daniella/Área de Trabalho/Trybe_Exercicios/bloco15-dia4-actions-assincronas/exercise-game-of-thrones-characters/src/components/CharacterInfo.js"],"names":["React","connect","propTypes","CharacterInfo","Component","render","mapStateToProps","state","name","reducerFetch","gender","aliases","books","loading","error","bool","isRequired","character","arrayOf","object","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADO,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAnByC;;AAoB3C,C,CAED;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACE,YAAN,CAAmBD,IADS;AAElCE,EAAAA,MAAM,EAAEH,KAAK,CAACE,YAAN,CAAmBC,MAFO;AAGlCC,EAAAA,OAAO,EAAEJ,KAAK,CAACE,YAAN,CAAmBE,OAHM;AAIlCC,EAAAA,KAAK,EAAEL,KAAK,CAACE,YAAN,CAAmBG,KAJQ;AAKlCC,EAAAA,OAAO,EAAEN,KAAK,CAACE,YAAN,CAAmBI,OALM;AAMlCC,EAAAA,KAAK,EAAEP,KAAK,CAACE,YAAN,CAAmBK;AANQ,CAAZ,CAAxB,C,CASA;;;AACA,eAAeb,OAAO,CAACK,eAAD,CAAP,CAAyBH,aAAzB,CAAf,C,CACA;;AACAA,aAAa,CAACD,SAAd,GAA0B;AACxBW,EAAAA,OAAO,EAAEX,SAAS,CAACa,IAAV,CAAeC,UADA;AAExBC,EAAAA,SAAS,EAAEf,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B,CAFa;AAGxBL,EAAAA,KAAK,EAAEZ,SAAS,CAACkB;AAHO,CAA1B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nclass CharacterInfo extends React.Component {\n  render() {\n    return(\n      <p>Teste</p>\n    )\n    // const { name, gender, aliases, books, loading, error } = this.props;\n    // if (!loading) {\n    //   return (\n    //     <ul>\n    //       <li>Name: {name}</li>\n    //       <li>Gender: {gender}</li>\n    //       <li>Aliases: {aliases.map((alias, index) => <p key={`${alias}-${index}`}>{alias}</p>)}</li>\n    //       <li>Books: {books.map((book, index) => <p key={`${book}-${index}`}>{book}</p>)}</li>\n    //     </ul>\n    //   )\n    // }\n    // if (error) { return <div>{error}</div>; }\n    // if (loading) { return <div>Loading...</div>; }\n    // return <div>Type a character name and click to search!</div>;\n  }\n};\n\n//mapeie o estado global para a propriedade da sua aplicação\nconst mapStateToProps = (state) => ({\n  name: state.reducerFetch.name,\n  gender: state.reducerFetch.gender,\n  aliases: state.reducerFetch.aliases,\n  books: state.reducerFetch.books,\n  loading: state.reducerFetch.loading,\n  error: state.reducerFetch.error,\n});\n\n// conecte este componente ao redux aqui\nexport default connect(mapStateToProps)(CharacterInfo);\n//faça as propTypes\nCharacterInfo.propTypes = {\n  loading: propTypes.bool.isRequired,\n  character: propTypes.arrayOf(propTypes.object),\n  error: propTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}