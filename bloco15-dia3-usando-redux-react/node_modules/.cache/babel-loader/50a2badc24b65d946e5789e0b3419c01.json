{"ast":null,"code":"var _jsxFileName = \"/home/daniella/\\xC1rea de Trabalho/Trybe_Exercicios/bloco15-dia3-usando-redux-react/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actionPersonal from '../redux/actions/action';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit() {\n    const {\n      history,\n      addPersonal\n    } = this.props;\n    addPersonal(this.state);\n    history.push('/professionalform');\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      cpf,\n      endereco,\n      cidade,\n      estado\n    } = this.state;\n    const states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"nome: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: nome,\n        name: \"nome\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"email: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cpf: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: cpf,\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"endereco: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: endereco,\n        name: \"endereco\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cidade: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"cidade\",\n        value: cidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultOption: \"Selecione\",\n        onChange: this.handleChange,\n        value: estado,\n        label: \"Estado: \",\n        id: \"estado\",\n        name: \"estado\",\n        options: states\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Enviar\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ProfessionalForm.propTypes = {\n//   addPersonal: propTypes.func.isRequired,\n//   history: propTypes.\n// };\n\n\nconst mapDispatchToProps = dispatch => ({\n  addPersonal: state => {\n    dispatch(actionPersonal(state));\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);","map":{"version":3,"sources":["/home/daniella/Área de Trabalho/Trybe_Exercicios/bloco15-dia3-usando-redux-react/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","connect","actionPersonal","Input","Button","Select","PersonalForm","constructor","state","nome","email","cpf","endereco","cidade","estado","handleSubmit","bind","handleChange","target","name","value","setState","history","addPersonal","props","push","render","states","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport actionPersonal from '../redux/actions/action';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit() {\n    const { history, addPersonal } = this.props;\n    addPersonal(this.state);\n    history.push('/professionalform');\n  }\n\n  render() {\n    const { nome, email, cpf, endereco, cidade, estado } = this.state;\n    const states = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <fieldset>\n        <Input\n          label=\"nome: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ nome }\n          name=\"nome\"\n          required\n        />\n        <Input\n          label=\"email: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n          required\n        />\n        <Input\n          label=\"cpf: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ cpf }\n          name=\"cpf\"\n          required\n        />\n        <Input\n          label=\"endereco: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ endereco }\n          name=\"endereco\"\n          required\n        />\n        <Input\n          label=\"cidade: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          name=\"cidade\"\n          value={ cidade }\n        />\n        <Select\n          defaultOption=\"Selecione\"\n          onChange={ this.handleChange }\n          value={ estado }\n          label=\"Estado: \"\n          id=\"estado\"\n          name=\"estado\"\n          options={ states }\n        />\n        <Button\n          type=\"button\"\n          label=\"Enviar\"\n          onClick={ this.handleSubmit }\n        />\n      </fieldset>\n    );\n  }\n}\n\n// ProfessionalForm.propTypes = {\n//   addPersonal: propTypes.func.isRequired,\n//   history: propTypes.\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  addPersonal: (state) => { dispatch(actionPersonal(state)); },\n});\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);\n"]},"metadata":{},"sourceType":"module"}